// generated by CommonLibrary.cmake, do not edit
#ifndef MB_H
#define MB_H
#include <mb/cameras/Camera.hpp>
#include <mb/cameras/PerspectiveCamera.hpp>
#include <mb/cameras/OrthographicCamera.hpp>
#include <mb/constants/Constants.hpp>
#include <mb/core/BufferAttribute.hpp>
#include <mb/core/Color3.hpp>
#include <mb/core/Color4.hpp>
#include <mb/core/Framebuffer.hpp>
#include <mb/core/GeometryFunctions.hpp>
#include <mb/core/GLContext.hpp>
#include <mb/core/GlobalState.hpp>
#include <mb/core/Layer.hpp>
#include <mb/core/Log.hpp>
#include <mb/core/PostProcess.hpp>
#include <mb/core/Program.hpp>
#include <mb/core/Query.hpp>
#include <mb/core/TransformFeedback.hpp>
#include <mb/core/VertexArray.hpp>
#include <mb/core/VertexBuffer.hpp>
#include <mb/core/VertexUBO.hpp>
#include <mb/core/Framebuffer2.hpp>
#include <mb/extras/CustomPingPong.hpp>
#include <mb/extras/Easing.hpp>
#include <mb/extras/EventDispatcher.hpp>
#include <mb/extras/ParticleSystem.hpp>
#include <mb/extras/Ray.hpp>
#include <mb/lights/AmbientLight.hpp>
#include <mb/lights/DirectionalLight.hpp>
#include <mb/lights/HemisphericLight.hpp>
#include <mb/lights/Light.hpp>
#include <mb/lights/PointLight.hpp>
#include <mb/lights/SpotLight.hpp>
#include <mb/materials/Material.hpp>
#include <mb/materials/NormalMaterial.hpp>
#include <mb/materials/PostProcessMaterial.hpp>
#include <mb/materials/ShaderMaterial.hpp>
#include <mb/materials/SimpleShadingMaterial.hpp>
#include <mb/materials/Uniform.hpp>
#include <mb/maths/Box2D.hpp>
#include <mb/maths/Box3D.hpp>
#include <mb/maths/Clock.hpp>
#include <mb/maths/Curves.hpp>
#include <mb/maths/EulerAngle.hpp>
#include <mb/maths/Interpolation.hpp>
#include <mb/maths/Mat2.hpp>
#include <mb/maths/Mat3.hpp>
#include <mb/maths/Mat4.hpp>
#include <mb/maths/Mathf.hpp>
#include <mb/maths/Quat.hpp>
#include <mb/maths/Sphere2D.hpp>
#include <mb/maths/Sphere3D.hpp>
#include <mb/maths/Spline.hpp>
#include <mb/maths/Vect2.hpp>
#include <mb/maths/Vect3.hpp>
#include <mb/maths/Vect4.hpp>
#include <mb/maths/Spherical.hpp>
#include <mb/models/Capsule.hpp>
#include <mb/models/Cone.hpp>
#include <mb/models/Cube.hpp>
#include <mb/models/Cylinder.hpp>
#include <mb/models/Disc.hpp>
#include <mb/models/Drawable.hpp>
#include <mb/models/Icosahedron.hpp>
#include <mb/models/Lathe.hpp>
#include <mb/models/Mesh.hpp>
#include <mb/models/Octahedron.hpp>
#include <mb/models/Polyhedron.hpp>
#include <mb/models/Prism.hpp>
#include <mb/models/Tetrahedron.hpp>
#include <mb/models/Torus.hpp>
#include <mb/models/Plane.hpp>
#include <mb/models/ParametricGeom.hpp>
#include <mb/others/Exception.hpp>
#include <mb/resources/MaterialCache.hpp>
#include <mb/resources/ObjParser.hpp>
#include <mb/resources/ResourceDrawable.hpp>
#include <mb/resources/ResourceManager.hpp>
#include <mb/resources/ResourceShader.hpp>
#include <mb/resources/TextureCache.hpp>
#include <mb/scene/Component.hpp>
#include <mb/scene/Engine.hpp>
#include <mb/scene/Fog.hpp>
#include <mb/scene/Group.hpp>
#include <mb/scene/MeshRenderer.hpp>
#include <mb/scene/MeshRendererTesselation.hpp>
#include <mb/scene/Node.hpp>
#include <mb/scene/Scene.hpp>
#include <mb/scene/Transform.hpp>
#include <mb/scene/NodeData.hpp>
#include <mb/textures/RenderBuffer.hpp>
#include <mb/textures/RenderBufferMultisampleTexture.hpp>
#include <mb/textures/RenderBufferTexture.hpp>
#include <mb/textures/Texture.hpp>
#include <mb/textures/Texture1D.hpp>
#include <mb/textures/Texture2D.hpp>
#include <mb/textures/Texture2DArray.hpp>
#include <mb/textures/Texture3D.hpp>
#include <mb/utils/ArgumentParser.hpp>
#include <mb/utils/NonCopyable.hpp>
#include <mb/utils/any.hpp>
#include <mb/utils/macros.hpp>
#include <mb/utils/utils.hpp>
#include <mb/utils/iniReader.hpp>
#include <mb/utils/RTTI.hpp>
#include <mb/Includes.hpp>
#include <mb/Helpers.hpp>
#include <mb/SimpleCamera.hpp>
#include <mb/core/os.hpp>
#include <mb/io/Mouse.hpp>
#include <mb/io/Keyboard.hpp>
#include <mb/io/Input.hpp>
#include <mb/io/Window.hpp>
#include <mb/io/GLFWWindow2.hpp>
#include <mb/CameraComponent.hpp>
#include <mb/models/IDrawable.hpp>
#include <mb/scene/RenderTarget.hpp>
#include <mb/api.h>
#include <mb/version.h>
#endif
