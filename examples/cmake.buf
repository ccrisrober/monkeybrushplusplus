
if( MB_WITH_EXAMPLES )

  include_directories(
    ${PROJECT_BINARY_DIR}/include
    ${PROJECT_SOURCE_DIR}
    ${CMAKE_CURRENT_BINARY_DIR}
  )

  configure_file(
    ${CMAKE_CURRENT_SOURCE_DIR}/shaderFiles.h.in
    ${CMAKE_CURRENT_BINARY_DIR}/shaderFiles.h )

  configure_file(
    ${CMAKE_CURRENT_SOURCE_DIR}/assetsFiles.h.in
    ${CMAKE_CURRENT_BINARY_DIR}/assetsFiles.h )


  set( MBALIENTEXTURE_HEADERS )
  set( MBALIENTEXTURE_SOURCES alienTexture.cpp )
  set( MBALIENTEXTURE_LINK_LIBRARIES
    mb
  )
  common_application( mbAlienTexture )


  set( MBALPHATEXTURES_HEADERS )
  set( MBALPHATEXTURES_SOURCES alphaTextures.cpp )
  set( MBALPHATEXTURES_LINK_LIBRARIES
    mb
  )
  common_application( mbAlphaTextures )


  ###set( MBBROWNIAN_HEADERS )
  ###set( MBBROWNIAN_SOURCES brownian.cpp )
  ###set( MBBROWNIAN_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbBrownian )
###
###
  ###set( MBCUBES_HEADERS )
  ###set( MBCUBES_SOURCES cubes.cpp )
  ###set( MBCUBES_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbCubes )
###
###
  ###set( MBEXPLOSION_HEADERS )
  ###set( MBEXPLOSION_SOURCES explosion.cpp )
  ###set( MBEXPLOSION_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbExplosion )
###
###
  ###set( MBGRANITETEXTURE_HEADERS )
  ###set( MBGRANITETEXTURE_SOURCES graniteTexture.cpp )
  ###set( MBGRANITETEXTURE_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbGraniteTexture )
###
###
  ###set( MBHATCHINGTEXTURE_HEADERS )
  ###set( MBHATCHINGTEXTURE_SOURCES hatchingTexture.cpp )
  ###set( MBHATCHINGTEXTURE_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbHatchingTexture )
###
###
  ###set( MBHATCHING3DTEXTURE_HEADERS )
  ###set( MBHATCHING3DTEXTURE_SOURCES hatching3DTexture.cpp )
  ###set( MBHATCHING3DTEXTURE_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbHatching3DTexture )
###
###
  ###set( MBHEIGHTMAP_HEADERS )
  ###set( MBHEIGHTMAP_SOURCES heightmap.cpp )
  ###set( MBHEIGHTMAP_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbHeightmap )


  ## TODO set( MBHEIGHTMAPEARTH_HEADERS )
  ## TODO set( MBHEIGHTMAPEARTH_SOURCES heightmapEarth.cpp )
  ## TODO set( MBHEIGHTMAPEARTH_LINK_LIBRARIES
  ## TODO   mb
  ## TODO )
  ## TODO common_application( mbHeightmapEarth )


  ###set( MBHEIGHTMAPTESSELATION_HEADERS )
  ###set( MBHEIGHTMAPTESSELATION_SOURCES heightmapTesselation.cpp )
  ###set( MBHEIGHTMAPTESSELATION_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbHeightmapTesselation )
###
###
  ###set( MBHELLOMESH_HEADERS )
  ###set( MBHELLOMESH_SOURCES helloMesh.cpp )
  ###set( MBHELLOMESH_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbHelloMesh )
###
###
  ###set( MBHELLOMESHARGS_HEADERS )
  ###set( MBHELLOMESHARGS_SOURCES helloMeshArgs.cpp )
  ###set( MBHELLOMESHARGS_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbHelloMeshArgs )
###
###
  ###set( MBHELLOTEXTURE_HEADERS )
  ###set( MBHELLOTEXTURE_SOURCES helloTexture.cpp )
  ###set( MBHELLOTEXTURE_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbHelloTexture )
###
###
  ###set( MBHELLOWORLD_HEADERS )
  ###set( MBHELLOWORLD_SOURCES helloWorld.cpp )
  ###set( MBHELLOWORLD_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbHelloWorld )
###
###
  ###set( MBNORMALINTERPOLATION_HEADERS )
  ###set( MBNORMALINTERPOLATION_SOURCES normalInterpolation.cpp )
  ###set( MBNORMALINTERPOLATION_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbNormalInterpolation )
###
###
  ###set( MBNORMALMAPPING_HEADERS )
  ###set( MBNORMALMAPPING_SOURCES normalMapping.cpp )
  ###set( MBNORMALMAPPING_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbNormalMapping )
###
###
  ###set( MBORBITPIVOT_HEADERS )
  ###set( MBORBITPIVOT_SOURCES orbitPivot.cpp )
  ###set( MBORBITPIVOT_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbOrbitPivot )
###
###
  ###set( MBPHONGTESSELATION_HEADERS )
  ###set( MBPHONGTESSELATION_SOURCES phongTesselation.cpp )
  ###set( MBPHONGTESSELATION_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbPhongTesselation )
###
###
  ###set( MBRANDOMCUBE_HEADERS )
  ###set( MBRANDOMCUBE_SOURCES randomCube.cpp )
  ###set( MBRANDOMCUBE_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbRandomCube )
###
###
  ###set( MBSCENEGRAPH_HEADERS )
  ###set( MBSCENEGRAPH_SOURCES sceneGraph.cpp )
  ###set( MBSCENEGRAPH_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbSceneGraph )
###
###
###
###
###
###
  ###set( MBSPHERICALHARMONICS_HEADERS )
  ###set( MBSPHERICALHARMONICS_SOURCES sphericalHarmonics.cpp )
  ###set( MBSPHERICALHARMONICS_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbSphericalHarmonics )
###
###
  ###set( MBTEXSWAP_HEADERS )
  ###set( MBTEXSWAP_SOURCES texSwap.cpp )
  ###set( MBTEXSWAP_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbTexSwap )
###
###
  ###set( MBTOONSHADING_HEADERS )
  ###set( MBTOONSHADING_SOURCES toonShading.cpp )
  ###set( MBTOONSHADING_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbToonShading )
###
###
  ###set( MBTRIANGLETESSELATION_HEADERS )
  ###set( MBTRIANGLETESSELATION_SOURCES triangleTesselation.cpp )
  ###set( MBTRIANGLETESSELATION_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbTriangleTesselation )
###
###
  ###set( MBTURBULENCETEXTURE_HEADERS )
  ###set( MBTURBULENCETEXTURE_SOURCES turbulenceTexture.cpp )
  ###set( MBTURBULENCETEXTURE_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbTurbulenceTexture )

endif( )

# COMPUTE SHADERS
if( MB_WITH_EXAMPLES )

  ###include_directories(
  ###  ${PROJECT_BINARY_DIR}/include
  ###  ${PROJECT_SOURCE_DIR}
  ###  ${CMAKE_CURRENT_BINARY_DIR}
  ###)
###
  ###configure_file(
  ###  ${CMAKE_CURRENT_SOURCE_DIR}/shaderFiles.h.in
  ###  ${CMAKE_CURRENT_BINARY_DIR}/shaderFiles.h )
###
  ###configure_file(
  ###  ${CMAKE_CURRENT_SOURCE_DIR}/assetsFiles.h.in
  ###  ${CMAKE_CURRENT_BINARY_DIR}/assetsFiles.h )
###
###
  ###set( MBRAYTRACINGCS_HEADERS )
  ###set( MBRAYTRACINGCS_SOURCES rayTracingCS.cpp )
  ###set( MBRAYTRACINGCS_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbRayTracingCS )
en###dif( )
###
# ###POSTPROCESS
if###( MB_WITH_EXAMPLES )
###
  ###include_directories(
  ###	${PROJECT_BINARY_DIR}/include
  ###	${PROJECT_SOURCE_DIR}
  ###	${CMAKE_CURRENT_BINARY_DIR}
  ###)
###
  ###configure_file(
  ###	${CMAKE_CURRENT_SOURCE_DIR}/shaderFiles.h.in
  ###	${CMAKE_CURRENT_BINARY_DIR}/shaderFiles.h )
###
  ###configure_file(
  ###	${CMAKE_CURRENT_SOURCE_DIR}/assetsFiles.h.in
  ###	${CMAKE_CURRENT_BINARY_DIR}/assetsFiles.h )
###
###
  ###set( MBCOLORBLIND_HEADERS )
  ###set( MBCOLORBLIND_SOURCES colorBlind.cpp )
  ###set( MBCOLORBLIND_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbColorBlind )
###
###
  ###set( MBKALEIDOSCOPE_HEADERS )
  ###set( MBKALEIDOSCOPE_SOURCES kaleidoscope.cpp )
  ###set( MBKALEIDOSCOPE_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbKaleidoscope )
###
###
  ###set( MBKUWAHARAFILTER_HEADERS )
  ###set( MBKUWAHARAFILTER_SOURCES kuwaharaFilter.cpp )
  ###set( MBKUWAHARAFILTER_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbKuwaharaFilter )
###
  ###set( MBPIXELIZATION_HEADERS )
  ###set( MBPIXELIZATION_SOURCES pixelization.cpp )
  ###set( MBPIXELIZATION_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbPixelization )
###
###
  ###set( MBQUASICRYSTAL_HEADERS )
  ###set( MBQUASICRYSTAL_SOURCES quasicrystal.cpp )
  ###set( MBQUASICRYSTAL_LINK_LIBRARIES
  ###  mb
  ###)
  ###common_application( mbQuasicrystal )

endif( )
